{"apiVersion": "v1", "data": {"web.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app \n        xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" \n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"\n        metadata-complete=\"false\"\n        version=\"3.1\">\n    <display-name>GeoServer</display-name>\n  \n      <context-param>\n    <param-name>serviceStrategy</param-name>\n    <!-- Meaning of the different values :\n         \n         PARTIAL-BUFFER2\n         - Partially buffers the first xKb to disk. Once that has buffered, the the \n           result is streamed to the user. This will allow for most errors to be caught\n           early. \n           \n         BUFFER\n         - stores the entire response in memory first, before sending it off to\n           the user (may run out of memory)\n\n         SPEED\n         - outputs directly to the response (and cannot recover in the case of an\n           error)\n\n         FILE\n         - outputs to the local filesystem first, before sending it off to the user\n      -->\n    <param-value>PARTIAL-BUFFER2</param-value>\n  </context-param>\n  \n  <context-param>\n    <!-- see comments on the PARTIAL-BUFFER strategy -->\n    <!-- this sets the size of the buffer.  default is \"50\" = 50kb -->\n\n    <param-name>PARTIAL_BUFFER_STRATEGY_SIZE</param-name>\n    <param-value>50</param-value>\n  </context-param>\n  \n  <!--Can be true or false (defaults to: false). -->\n  <!--When true the JSONP (text/javascript) output format is enabled -->\n  <!--\n  <context-param>\n    <param-name>ENABLE_JSONP</param-name>\n    <param-value>true</param-value>\n  </context-param>\n  -->\n    <!-- \n    <context-param>\n      <param-name>PROXY_BASE_URL</param-name>\n      <param-value>http://82.58.146.45/geoserver</param-value>\n    </context-param>\n     -->\n   \n     <!--\n    <context-param>\n       <param-name>GEOSERVER_DATA_DIR</param-name>\n        <param-value>C:\\eclipse\\workspace\\geoserver_trunk\\cite\\confCiteWFSPostGIS</param-value>\n    </context-param> \n   -->\n    \n    <!-- pick up all spring application contexts -->\n    <context-param>\n        <param-name>contextConfigLocation</param-name>\n        <param-value>classpath*:/applicationContext.xml classpath*:/applicationSecurityContext.xml</param-value>\n    </context-param>\n\n    <filter>\n     <filter-name>FlushSafeFilter</filter-name>\n     <filter-class>org.geoserver.filters.FlushSafeFilter</filter-class>\n    </filter>\n     \n    <filter>\n      <filter-name>Set Character Encoding</filter-name>\n      <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>\n      <init-param>\n        <param-name>encoding</param-name>\n        <param-value>UTF-8</param-value>\n      </init-param>\n    </filter>\n\n    <filter>\n     <filter-name>SessionDebugger</filter-name>\n     <filter-class>org.geoserver.filters.SessionDebugFilter</filter-class>\n    </filter>\n\n    <filter>\n    <filter-name>filterChainProxy</filter-name>     \n     <filter-class> org.springframework.web.filter.DelegatingFilterProxy</filter-class>\n    </filter>\n\n    <filter>\n      <filter-name>xFrameOptionsFilter</filter-name>\n      <filter-class>org.geoserver.filters.XFrameOptionsFilter</filter-class>\n    </filter>\n\n   <filter>\n     <filter-name>GZIP Compression Filter</filter-name>\n     <filter-class>org.geoserver.filters.GZIPFilter</filter-class>\n     <init-param>\n         <!-- The compressed-types parameter is a comma-separated list of regular expressions.\n              If a mime type matches any of the regular expressions then it will be compressed.\n              -->\n         <param-name>compressed-types</param-name>\n         <param-value>text/.*,.*xml.*,application/json,application/x-javascript</param-value>\n     </init-param>\n   </filter>\n   \n   <filter>\n     <filter-name>Advanced Dispatch Filter</filter-name>\n     <filter-class>org.geoserver.platform.AdvancedDispatchFilter</filter-class>\n     <!-- \n     This filter allows for a single mapping to the spring dispatcher. However using /* as a mapping\n     in a servlet mapping causes the servlet path to be \"/\" of the request. This causes problems with\n     library like wicket and restlet. So this filter fakes the servlet path by assuming the first \n     component of the path is the mapped path. \n     -->\n   </filter>\n   \n   <filter>\n    <filter-name>Spring Delegating Filter</filter-name>\n    <filter-class>org.geoserver.filters.SpringDelegatingFilter</filter-class>\n    <!--\n    This filter allows for filters to be loaded via spring rather than \n    registered here in web.xml.  One thing to note is that for such filters \n    init() is not called. INstead any initialization is performed via spring \n    ioc.\n    -->\n   </filter>\n   \n   <filter>\n     <filter-name>Thread locals cleanup filter</filter-name>\n     <filter-class>org.geoserver.filters.ThreadLocalsCleanupFilter</filter-class>\n     <!-- \n     This filter cleans up thread locals Geotools is setting up for concurrency and performance\n     reasons \n     -->\n   </filter>\n\n   <!-- Uncomment following filter to enable CORS in Jetty. Do not forget the second config block further down.\n    <filter>\n      <filter-name>cross-origin</filter-name>\n      <filter-class>org.eclipse.jetty.servlets.CrossOriginFilter</filter-class>\n      <init-param>\n        <param-name>chainPreflight</param-name>\n        <param-value>false</param-value>\n      </init-param>\n      <init-param>\n        <param-name>allowedOrigins</param-name>\n        <param-value>*</param-value>\n      </init-param>\n      <init-param>\n        <param-name>allowedMethods</param-name>\n        <param-value>GET,POST,PUT,DELETE,HEAD,OPTIONS</param-value>\n      </init-param>\n      <init-param>\n        <param-name>allowedHeaders</param-name>\n        <param-value>*</param-value>\n      </init-param>\n    </filter>\n    -->\n    \n   <!-- Uncomment following filter to enable CORS in Tomcat. Do not forget the second config block further down. -->\n    <filter>\n      <filter-name>cross-origin</filter-name>\n      <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>\n      <init-param>\n        <param-name>cors.allowed.origins</param-name>\n        <param-value>*</param-value>\n      </init-param>\n      <init-param>\n        <param-name>cors.allowed.methods</param-name>\n        <param-value>GET,POST,PUT,DELETE,HEAD,OPTIONS</param-value>\n      </init-param>\n      <init-param>\n        <param-name>cors.allowed.headers</param-name>\n        <param-value>*</param-value>\n      </init-param>\n    </filter>\n\n    <!-- \n      THIS FILTER MAPPING MUST BE THE FIRST ONE, otherwise we end up with ruined chars in the input from the GUI\n      See the \"Note\" in the Tomcat character encoding guide:\n      http://wiki.apache.org/tomcat/FAQ/CharacterEncoding\n    -->\n    <filter-mapping>\n      <filter-name>Set Character Encoding</filter-name>\n      <url-pattern>/*</url-pattern>\n    </filter-mapping>\n   \n    <!-- Uncomment following filter-mapping to enable CORS -->\n    <filter-mapping>\n        <filter-name>cross-origin</filter-name>\n        <url-pattern>/*</url-pattern>\n    </filter-mapping>\n   \n    <filter-mapping>\n      <filter-name>FlushSafeFilter</filter-name>\n      <url-pattern>/*</url-pattern>\n    </filter-mapping>\n    \n    <filter-mapping>\n      <filter-name>SessionDebugger</filter-name>\n      <url-pattern>/*</url-pattern>\n    </filter-mapping>\n\n    <filter-mapping>\n      <filter-name>GZIP Compression Filter</filter-name>\n      <url-pattern>/*</url-pattern>\n    </filter-mapping>\n\n    <filter-mapping>\n      <filter-name>xFrameOptionsFilter</filter-name>\n      <url-pattern>/*</url-pattern>\n    </filter-mapping>\n   \n    <!-- \n      If you want to use your security system comment out this one too\n    -->\n    <filter-mapping>\n      <filter-name>filterChainProxy</filter-name>\n      <url-pattern>/*</url-pattern>\n    </filter-mapping>\n    \n    <filter-mapping>\n      <filter-name>Advanced Dispatch Filter</filter-name>\n      <url-pattern>/*</url-pattern>\n    </filter-mapping>\n\n    <filter-mapping>\n      <filter-name>Spring Delegating Filter</filter-name>\n      <url-pattern>/*</url-pattern>\n    </filter-mapping>\n    \n    <filter-mapping>\n      <filter-name>Thread locals cleanup filter</filter-name>\n      <url-pattern>/*</url-pattern>\n    </filter-mapping>\n    \n    <!-- general initializer, should be first thing to execute -->\n    <listener>\n      <listener-class>org.geoserver.GeoserverInitStartupListener</listener-class>\n    </listener>\n    \n    <!-- logging initializer, should execute before spring context startup -->\n    <listener>\n      <listener-class>org.geoserver.logging.LoggingStartupContextListener</listener-class>\n    </listener>\n  \n    <!--  spring context loader -->\n    <listener>\n      <listener-class>org.geoserver.platform.GeoServerContextLoaderListener</listener-class>\n    </listener>\n    \n    <!--  http session listener proxy -->\n    <listener>\n      <listener-class>org.geoserver.platform.GeoServerHttpSessionListenerProxy</listener-class>\n    </listener>\n\n  <!-- request context listener for session-scoped beans -->\n  <listener>\n    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>\n  </listener>\n    \n    <!-- spring dispatcher servlet, dispatches all incoming requests -->\n    <servlet>\n      <servlet-name>dispatcher</servlet-name>\n      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n    </servlet>\n    \n    <!-- single mapping to spring, this only works properly if the advanced dispatch filter is \n         active -->\n    <servlet-mapping>\n        <servlet-name>dispatcher</servlet-name>\n        <url-pattern>/*</url-pattern>\n    </servlet-mapping>\n\n    <session-config>\n        <cookie-config>\n            <http-only>true</http-only>\n            <!-- The Secure flag should be set on session cookies but is commented out by default since it -->\n            <!-- will break non-HTTPS web UI access and may cause problems with some proxy configurations. -->\n            <!-- Uncomment the following line to add the Secure flag to session cookies. -->\n            <!-- <secure>true</secure> -->\n        </cookie-config>\n        <tracking-mode>COOKIE</tracking-mode>\n    </session-config>\n    \n    <mime-mapping>\n      <extension>xsl</extension>\n      <mime-type>text/xml</mime-type>\n    </mime-mapping>\n    <mime-mapping>\n      <extension>sld</extension>\n      <mime-type>text/xml</mime-type>\n    </mime-mapping>\n    <mime-mapping>\n      <extension>json</extension>\n      <mime-type>application/json</mime-type>\n    </mime-mapping>\n    <mime-mapping>\n      <extension>yaml</extension>\n      <mime-type>text/plain</mime-type>\n    </mime-mapping>\n  \n    <welcome-file-list>\n        <welcome-file>index.html</welcome-file>\n    </welcome-file-list>\n    \n</web-app>\n"}, "kind": "ConfigMap", "metadata": {"name": "geoserver"}}